From 0729c4e81f094eb6c81ba7c4287d90726c89d619 Mon Sep 17 00:00:00 2001
Message-Id: <0729c4e81f094eb6c81ba7c4287d90726c89d619.1620823659.git.git@grubix.eu>
From: Michael J Gruber <git@grubix.eu>
Date: Tue, 11 May 2021 22:48:52 +0200
Subject: [PATCH 1/2] test: change database from within pre-new hook

Due to the change in the config system, notmuch keeps a notmuch database
open when it would not do so before. Consequently, it can miss changes
to the database which are done from a hook (while notmuch holds the
databse in read only mode). When notmuch itself writes to the database
after that it uses wrong assumptions about the last used doc id etc.

Demonstrate this by triggering an assertion. (This new test succeeds
with notmuch 0.31.4.)

Signed-off-by: Michael J Gruber <git@grubix.eu>
Amended-by: db. Check for both messages
---
 test/T400-hooks.sh | 25 +++++++++++++++++++++++++
 1 file changed, 25 insertions(+)

diff --git a/test/T400-hooks.sh b/test/T400-hooks.sh
index 00c99337..777338d7 100755
--- a/test/T400-hooks.sh
+++ b/test/T400-hooks.sh
@@ -28,6 +28,16 @@ EOF
     echo "${TOKEN}" > ${2}
 }
 
+create_change_hook () {
+    mkdir -p ${HOOK_DIR}
+    cat <<EOF >"${HOOK_DIR}/${1}"
+#!/bin/sh
+notmuch insert --no-hooks < ${2} > /dev/null
+rm -f ${2}
+EOF
+    chmod +x "${HOOK_DIR}/${1}"
+}
+
 create_failing_hook () {
     local HOOK_DIR=${2}
     mkdir -p ${HOOK_DIR}
@@ -176,6 +186,21 @@ EOF
     NOTMUCH_NEW
     test_expect_equal_file write.expected write.output
 
+    test_begin_subtest "add message in pre-new [${config}]"
+    test_subtest_known_broken
+    rm -rf ${HOOK_DIR}
+    generate_message '[subject]="add msg in pre-new"'
+    id1=$gen_msg_id
+    create_change_hook "pre-new" $gen_msg_filename $HOOK_DIR
+    generate_message '[subject]="add msg in new"'
+    NOTMUCH_NEW
+    notmuch search id:$id1 or id:$gen_msg_id | notmuch_search_sanitize > OUTPUT
+    cat <<EOF | sed s'/^[ \t]*//' > EXPECTED
+    thread:XXX   2001-01-05 [1/1] Notmuch Test Suite; add msg in pre-new (inbox unread)
+    thread:XXX   2001-01-05 [1/1] Notmuch Test Suite; add msg in new (inbox unread)
+EOF
+    test_expect_equal_file EXPECTED OUTPUT
+
     rm -rf ${HOOK_DIR}
 done
 test_done
-- 
2.31.1.708.gc9a0ac0934

From 393c92b04271472e6fdd19da73672a60723e34aa Mon Sep 17 00:00:00 2001
Message-Id: <393c92b04271472e6fdd19da73672a60723e34aa.1620823659.git.git@grubix.eu>
In-Reply-To: <0729c4e81f094eb6c81ba7c4287d90726c89d619.1620823659.git.git@grubix.eu>
References: <0729c4e81f094eb6c81ba7c4287d90726c89d619.1620823659.git.git@grubix.eu>
From: David Bremner <david@tethera.net>
Date: Sun, 9 May 2021 09:28:48 -0300
Subject: [PATCH 2/2] lib/notmuch_database_reopen: reload some database
 metadata

In some uses of reopen, new documents and threads maybe have been
added, and e.g. compaction may have changed the uuid.

Signed-off-by: Michael J Gruber <git@grubix.eu>
---
 lib/open.cc        | 59 ++++++++++++++++++++++++++--------------------
 test/T400-hooks.sh |  1 -
 2 files changed, 34 insertions(+), 26 deletions(-)

diff --git a/lib/open.cc b/lib/open.cc
index bdb695fe..1e9c86fe 100644
--- a/lib/open.cc
+++ b/lib/open.cc
@@ -325,6 +325,37 @@ _init_libs ()
     }
 }
 
+static void
+_load_database_state (notmuch_database_t *notmuch)
+{
+    std::string last_thread_id;
+    std::string last_mod;
+
+    notmuch->last_doc_id = notmuch->xapian_db->get_lastdocid ();
+    last_thread_id = notmuch->xapian_db->get_metadata ("last_thread_id");
+    if (last_thread_id.empty ()) {
+	notmuch->last_thread_id = 0;
+    } else {
+	const char *str;
+	char *end;
+
+	str = last_thread_id.c_str ();
+	notmuch->last_thread_id = strtoull (str, &end, 16);
+	if (*end != '\0')
+	    INTERNAL_ERROR ("Malformed database last_thread_id: %s", str);
+    }
+
+    /* Get current highest revision number. */
+    last_mod = notmuch->xapian_db->get_value_upper_bound (
+	NOTMUCH_VALUE_LAST_MOD);
+    if (last_mod.empty ())
+	notmuch->revision = 0;
+    else
+	notmuch->revision = Xapian::sortable_unserialise (last_mod);
+    notmuch->uuid = talloc_strdup (
+	notmuch, notmuch->xapian_db->get_uuid ().c_str ());
+}
+
 static notmuch_status_t
 _finish_open (notmuch_database_t *notmuch,
 	      const char *profile,
@@ -339,8 +370,6 @@ _finish_open (notmuch_database_t *notmuch,
     const char *database_path = notmuch_database_get_path (notmuch);
 
     try {
-	std::string last_thread_id;
-	std::string last_mod;
 
 	if (mode == NOTMUCH_DATABASE_MODE_READ_WRITE) {
 	    notmuch->writable_xapian_db = new Xapian::WritableDatabase (notmuch->xapian_path,
@@ -384,29 +413,7 @@ _finish_open (notmuch_database_t *notmuch,
 	    goto DONE;
 	}
 
-	notmuch->last_doc_id = notmuch->xapian_db->get_lastdocid ();
-	last_thread_id = notmuch->xapian_db->get_metadata ("last_thread_id");
-	if (last_thread_id.empty ()) {
-	    notmuch->last_thread_id = 0;
-	} else {
-	    const char *str;
-	    char *end;
-
-	    str = last_thread_id.c_str ();
-	    notmuch->last_thread_id = strtoull (str, &end, 16);
-	    if (*end != '\0')
-		INTERNAL_ERROR ("Malformed database last_thread_id: %s", str);
-	}
-
-	/* Get current highest revision number. */
-	last_mod = notmuch->xapian_db->get_value_upper_bound (
-	    NOTMUCH_VALUE_LAST_MOD);
-	if (last_mod.empty ())
-	    notmuch->revision = 0;
-	else
-	    notmuch->revision = Xapian::sortable_unserialise (last_mod);
-	notmuch->uuid = talloc_strdup (
-	    notmuch, notmuch->xapian_db->get_uuid ().c_str ());
+	_load_database_state (notmuch);
 
 	notmuch->query_parser = new Xapian::QueryParser;
 	notmuch->term_gen = new Xapian::TermGenerator;
@@ -733,6 +740,8 @@ notmuch_database_reopen (notmuch_database_t *notmuch,
 							   DB_ACTION);
 	    }
 	}
+
+	_load_database_state (notmuch);
     } catch (const Xapian::Error &error) {
 	if (! notmuch->exception_reported) {
 	    _notmuch_database_log (notmuch, "Error: A Xapian exception reopening database: %s\n",
diff --git a/test/T400-hooks.sh b/test/T400-hooks.sh
index 777338d7..0c84b7dd 100755
--- a/test/T400-hooks.sh
+++ b/test/T400-hooks.sh
@@ -187,7 +187,6 @@ EOF
     test_expect_equal_file write.expected write.output
 
     test_begin_subtest "add message in pre-new [${config}]"
-    test_subtest_known_broken
     rm -rf ${HOOK_DIR}
     generate_message '[subject]="add msg in pre-new"'
     id1=$gen_msg_id
-- 
2.31.1.708.gc9a0ac0934

